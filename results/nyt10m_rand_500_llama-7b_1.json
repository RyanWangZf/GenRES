{
      "BUSINESS DAY , PAGE C1 Castro Missing on May Day The throngs were out in the streets of Havana as they always are on May Day , but Cuba 's holiday honoring workers came and went without Fidel Castro .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: BUSINESS DAY , PAGE C1 Castro Missing on May Day The throngs were out in the streets of Havana as they always are on May Day , but Cuba 's holiday honoring workers came and went without Fidel Castro .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.entity import EntityRecognizer\nfrom nlp.relation import RelationRecognizer\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    analyzer = SentimentAnalyzer()\n    recognizer = EntityRecognizer()\n    recognizer.add_entity_type(\"person\", \"PERSON\")\n    recognizer.add_entity_type(\"organization\", \"ORGANIZATION\")\n    recognizer.add_entity_type(\"location\", \"LOCATION\")\n    recognizer.add_entity_type(\"event\", \"EVENT\")\n    recognizer.add_entity_type(\"time\", \"TIME\")\n    recognizer.add_entity_type(\"number\", \"NUMBER\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"date\", \"DATE\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity",
      "There could be other All-Stars on the market , including Pau Gasol of Memphis and Ray Allen of Seattle . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: There could be other All-Stars on the market , including Pau Gasol of Memphis and Ray Allen of Seattle . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral",
      "You know , the Arab world thinks that Israel wants to conquer the Middle East , '' he says inside the production van . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: You know , the Arab world thinks that Israel wants to conquer the Middle East , '' he says inside the production van . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_model import EntityLinkerModel\nfrom nlp.entity_linker_model_loader import EntityLinkerModelLoader\nfrom nlp.entity_linker_model_loader_json import EntityLinkerModelLoaderJson\nfrom nlp.entity_linker_model_loader_pickle import EntityLinkerModelLoaderPickle\nfrom nlp.entity_linker_model_loader_yaml import EntityLinkerModelLoaderYaml\nfrom nlp.entity_linker_model_loader_json_file import",
      "Peter Matthiessen , the writer , recalled meeting Mr. Styron in Montparnasse in Paris , just weeks before the publication of '' Lie Down in Darkness . '' ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Peter Matthiessen , the writer , recalled meeting Mr. Styron in Montparnasse in Paris , just weeks before the publication of '' Lie Down in Darkness . '' ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test",
      "Saudi Arabia and Iran have expressed alarm at the sectarian violence in Iraq , worrying that it could fuel similar tensions throughout the Middle East .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Saudi Arabia and Iran have expressed alarm at the sectarian violence in Iraq , worrying that it could fuel similar tensions throughout the Middle East .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\"\n    sentence = sentence_parser.parse(prompt)\n    sentence_splitter.split(sentence)\n    sentence_",
      "Tom Anderson , 31 , a MySpace founder , said , '' MySpace has a method of reaching people who are historically not interested in voting '' and may not read newspapers or watch news on television .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Tom Anderson , 31 , a MySpace founder , said , '' MySpace has a method of reaching people who are historically not interested in voting '' and may not read newspapers or watch news on television .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom n",
      "Now you have eight pieces of junk sitting at the yard , '' Representative Gene Taylor , Democrat of Mississippi , said at the hearing , his voice cracking with anger .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Now you have eight pieces of junk sitting at the yard , '' Representative Gene Taylor , Democrat of Mississippi , said at the hearing , his voice cracking with anger .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.entity import EntityRecognizer\nfrom nlp.relation import RelationRecognizer\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    analyzer = SentimentAnalyzer()\n    recognizer = EntityRecognizer()\n    recognizer.add_entity_type(\"person\", \"PERSON\")\n    recognizer.add_entity_type(\"organization\", \"ORGANIZATION\")\n    recognizer.add_entity_type(\"location\", \"LOCATION\")\n    recognizer.add_entity_type(\"event\", \"EVENT\")\n    recognizer.add_entity_type(\"object\", \"OBJECT\")\n    recognizer.add_entity_type(\"number\", \"NUMBER\")\n    recognizer.add_entity_type(\"time\", \"TIME\")\n    recognizer.add_entity_type(\"date\", \"DATE\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity_time\", \"QUANTITY_TIME\")\n    recognizer.add_entity_type(\"quantity_date\", \"QUANTITY_DATE\")\n    recognizer.add_entity_",
      "We try to inspire people to understand that they do not just have to work for Paramount or Sony -- that does not necessarily validate their lives , '' said Lloyd Kaufman , the longtime president of Troma Entertainment , whose book-and-DVD combination program , '' Make Your Own Damn Movie , '' offers lessons on everything from script conferences to presentations to potential investors to creating inexpensive yet realistic special effects .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: We try to inspire people to understand that they do not just have to work for Paramount or Sony -- that does not necessarily validate their lives , '' said Lloyd Kaufman , the longtime president of Troma Entertainment , whose book-and-DVD combination program , '' Make Your Own Damn Movie , '' offers lessons on everything from script conferences to presentations to potential investors to creating inexpensive yet realistic special effects .\nrelations: [/INST]\n\n\"\"\"\n\nimport re\nimport sys\nimport os\nimport json\nimport argparse\nimport logging\nimport time\nimport datetime\nimport random\nimport math\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport matplotlib.dates as mdates\nimport matplotlib.ticker as mticker\nimport matplotlib.colors as mcolors\nimport matplotlib.patches as mpatches\nimport matplotlib.lines as mlines\nimport matplotlib.text as mtext\nimport matplotlib.gridspec as mgrs\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.animation as animation\nimport matplotlib.",
      "It 's all cash , '' said Michael S. Melbinger , an executive compensation lawyer at Winston & Strawn in Chicago .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: It 's all cash , '' said Michael S. Melbinger , an executive compensation lawyer at Winston & Strawn in Chicago .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\"\n    sentence = sentence_parser.parse(prompt)\n    sentence_splitter.split",
      "Lima goes to Nicaragua , and disappears there ; two years later he has returned to Mexico City , and is glimpsed by the secretary of Octavio Paz .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Lima goes to Nicaragua , and disappears there ; two years later he has returned to Mexico City , and is glimpsed by the secretary of Octavio Paz .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence import Sentence\nfrom nlp.entity import Entity\nfrom nlp.relation import Relation\n\n\ndef main():\n    sentence = Sentence(\"Lima goes to Nicaragua , and disappears there ; two years later he has returned to Mexico City , and is glimpsed by the secretary of Octavio Paz .\")\n    tokenizer = Tokenizer()\n    tokens = tokenizer.tokenize(sentence)\n    entities = []\n    relations = []\n    for token in tokens:\n        if token.is_entity():\n            entities.append(token.entity())\n        elif token.is_relation():\n            relations.append(token.relation())\n\n    for entity in entities:\n        for relation in relations:\n            if entity.entity_id() == relation.entity_id():\n                relation.add_entity(entity)\n\n    print(relations)\n\n\nif __name__ == '__main__':\n    main()\n</s>",
      "Brian Carroll is with D.C. United as it prepares for its match on Tuesday against Chivas in Guadalajara , Mexico , the second leg of their Concacaf Champions Cup semifinal series .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Brian Carroll is with D.C. United as it prepares for its match on Tuesday against Chivas in Guadalajara , Mexico , the second leg of their Concacaf Champions Cup semifinal series .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom n",
      "Unlike many in Lebanon 's political stratum , General Aoun comes from humble origins , having been born into a poor Maronite family in Haret Hreik , which became a Hezbollah stronghold in Beirut 's southern suburbs in the 1980s .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Unlike many in Lebanon 's political stratum , General Aoun comes from humble origins , having been born into a poor Maronite family in Haret Hreik , which became a Hezbollah stronghold in Beirut 's southern suburbs in the 1980s .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\"\n    sentence = sentence_parser.parse(prompt)\n    sentence_splitter.split(sentence)\n    sentence_segmenter.segment(sentence)\n    sentence_parser.parse(sentence)\n    entity_extractor.extract(sentence)\n    entity_linker.link(entity_extractor.extracted_entities)\n    entity_linker_test.test(entity_linker.linked_entities)\n\n\nif __name__ == '__main__':\n    main()\n</s>",
      "Worst of all are the prospects for low-lying Kitzb\u00fchel , Austria , home of the Hahnenkamm , scheduled for Jan. 26-28 .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Worst of all are the prospects for low-lying Kitzb\u00fchel , Austria , home of the Hahnenkamm , scheduled for Jan. 26-28 .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test",
      "Mrs. Acworth , 36 , graduated from Fordham and is a senior vice president in Boston for KeyCorp , a Cleveland bank .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Mrs. Acworth , 36 , graduated from Fordham and is a senior vice president in Boston for KeyCorp , a Cleveland bank .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\"\n    sentence = sentence_parser.parse(prompt)",
      "Five years after he was convicted of killing his 15-year-old neighbor , Martha Moxley , as a teenager in Greenwich in 1975 , a teary Michael C. Skakel returned to court on Tuesday seeking a new trial .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Five years after he was convicted of killing his 15-year-old neighbor , Martha Moxley , as a teenager in Greenwich in 1975 , a teary Michael C. Skakel returned to court on Tuesday seeking a new trial .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.entity import EntityRecognizer\nfrom nlp.relation import RelationRecognizer\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(\"Five years after he was convicted of killing his 15-year-old neighbor , Martha Moxley , as a teenager in Greenwich in 1975 , a teary Michael C. Skakel returned to court on Tuesday seeking a new trial .\")\n    sentence = sentence.lower()\n    sentence = sentence.replace(\" \", \" \")\n    sentence = sentence.replace(\"'\", \" \")\n    sentence = sentence.replace(\"-\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"!\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace(\"?\", \" \")\n    sentence = sentence.replace",
      "Consider , for instance , the two northern California violinists : Jenny Scheinman -LRB- whose roots are there , though she now lives in Brooklyn -RRB- and Carla Kihlstedt -LRB- who lives in Oakland -RRB- .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Consider , for instance , the two northern California violinists : Jenny Scheinman -LRB- whose roots are there , though she now lives in Brooklyn -RRB- and Carla Kihlstedt -LRB- who lives in Oakland -RRB- .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence import Sentence\nfrom nlp.entity import Entity\nfrom nlp.relation import Relation\n\n\ndef extract_relations(sentence):\n    \"\"\"\n    Given a sentence, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(sentence)\n    sentence = Sentence(sentence)\n    entities = sentence.entities()\n    relations = []\n    for entity in entities:\n        relations.append([entity.name, entity.relationship, entity.entity])\n    return relations\n\n\ndef extract_relations_from_sentences(sentences):\n    \"\"\"\n    Given a list of sentences, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    sentences = [tokenizer.tokenize(sentence) for sentence in sentences]\n    sentences = [Sentence(sentence) for sentence in sentences]\n    entities = []\n    for sentence in sentences:\n        entities.extend(sentence.entities())\n    relations = []\n    for entity in entities:\n        relations.append([entity.name, entity.relationship, entity.entity])\n    return relations\n\n\ndef extract_relations_from_text(text):\n    \"\"\"\n    Given a text, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    text = tokenizer.tokenize(text)\n    text = Sentence(text)\n    entities = text.entities()\n    relations = []\n    for entity in entities:\n        relations.append([entity.name, entity.relationship, entity.entity])\n    return relations\n\n\ndef extract_relations_from_text_file(text_file):\n    \"\"\"\n    Given a text file, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    text_file = tokenizer.tokenize(text_file)\n    text_file = Sentence(text_file)\n    entities = text_file.entities()\n   ",
      "The Australian foreign minister said Sunday that his government had reached a deal to allow David Hicks , who has been held at the American military base in Guant\u00e1namo Bay , Cuba , for more than five years without trial , to return to Australia by the end of the year .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: The Australian foreign minister said Sunday that his government had reached a deal to allow David Hicks , who has been held at the American military base in Guant\u00e1namo Bay , Cuba , for more than five years without trial , to return to Australia by the end of the year .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom n",
      "Sharon Stone , for one , divorced from the San Francisco newspaper editor Phil Bronstein and living back in Los Angeles , has told close friends that she wants to find a partner outside of entertainment .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Sharon Stone , for one , divorced from the San Francisco newspaper editor Phil Bronstein and living back in Los Angeles , has told close friends that she wants to find a partner outside of entertainment .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test",
      "Sixteen months ago , in the basement of a private home in the Dorchester neighborhood of Boston , four aspiring rappers , aged 19 to 22 , were summarily executed in a barrage of semiautomatic gunfire .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Sixteen months ago , in the basement of a private home in the Dorchester neighborhood of Boston , four aspiring rappers , aged 19 to 22 , were summarily executed in a barrage of semiautomatic gunfire .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenize import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.ner import NER\nfrom nlp.relation import RelationExtractor\nfrom nlp.util import *\n\n\ndef main():\n    # Load the training data\n    train_data = load_data(\"train.txt\")\n    test_data = load_data(\"test.txt\")\n\n    # Tokenize the data\n    tokenizer = Tokenizer()\n    train_data = tokenizer.tokenize(train_data)\n    test_data = tokenizer.tokenize(test_data)\n\n    # Sentiment analysis\n    sentiment_analyzer = SentimentAnalyzer()\n    sentiment_analyzer.load_model(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analy",
      "For about a year , Mr. Kaplan had been helping Robert De Niro , Craig Hatkoff and Jane Rosenthal of Tribeca Productions , founders of the Tribeca Film Festival , to put together a bid .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: For about a year , Mr. Kaplan had been helping Robert De Niro , Craig Hatkoff and Jane Rosenthal of Tribeca Productions , founders of the Tribeca Film Festival , to put together a bid .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util",
      "Mary Tew was born March 25 , 1921 , in San Remo , Italy .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Mary Tew was born March 25 , 1921 , in San Remo , Italy .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence import Sentence\nfrom nlp.entity import Entity\nfrom nlp.relation import Relation\n\n\ndef extract_relations(sentence):\n    \"\"\"\n    Given a sentence, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(sentence)\n    sentence = Sentence(sentence)\n    entities = sentence.entities()\n    relations = []\n    for entity in entities:\n        relations.append([entity.name, entity.relationship, entity.entity])\n    return relations\n\n\ndef extract_relations_from_file(file_name):\n    \"\"\"\n    Given a file name, extract the relationships between entities within the text.\n    \"\"\"\n   ",
      "A day after his Florida team won its third consecutive Southeastern Conference tournament championship last month , Billy Donovan and I stood outside Donovan 's office , speaking more as human beings who had known each other for 20 years than as coach and reporter .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: A day after his Florida team won its third consecutive Southeastern Conference tournament championship last month , Billy Donovan and I stood outside Donovan 's office , speaking more as human beings who had known each other for 20 years than as coach and reporter .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.entity import EntityRecognizer\nfrom nlp.relation import RelationRecognizer\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(\"A day after his Florida team won its third consecutive Southeastern Conference tournament championship last month , Billy Donovan and I stood outside Donovan 's office , speaking more as human beings who had known each other for 20 years than as coach and reporter .\")\n    sentence = sentence.split()\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]\n    sentence = [tokenizer.tokenize(sentence[i]) for i in range(len(sentence))]",
      "The decision by Lackawanna County to funnel a half million dollars of its arts and culture budget into a low-budget film by a first-time feature director is not without critics in Scranton . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: The decision by Lackawanna County to funnel a half million dollars of its arts and culture budget into a low-budget film by a first-time feature director is not without critics in Scranton . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util",
      "Peter Munk , founder and chairman of Barrick Gold in Toronto , has warned that an exodus of head offices to other countries will cause , among other things , lower levels of charitable donations and fewer opportunities for skilled workers .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Peter Munk , founder and chairman of Barrick Gold in Toronto , has warned that an exodus of head offices to other countries will cause , among other things , lower levels of charitable donations and fewer opportunities for skilled workers .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util",
      "The sculpture was commissioned by Brian Maxwell , who created the PowerBar energy snack and donated it to Kennesaw . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: The sculpture was commissioned by Brian Maxwell , who created the PowerBar energy snack and donated it to Kennesaw . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test",
      "Mr. Obama has said in the past that both Israelis and Palestinians had '' suffered '' because of the lack of a peace agreement , and a spokesman said on Tuesday that Mr. Obama believed '' the security of Israel should be America 's starting point in the Middle East . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Mr. Obama has said in the past that both Israelis and Palestinians had '' suffered '' because of the lack of a peace agreement , and a spokesman said on Tuesday that Mr. Obama believed '' the security of Israel should be America 's starting point in the Middle East . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenize import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAnalyzer\nfrom nlp.sentiment.sentiment_analyzer import SentimentAn",
      "wrote Chris Messina , a 26-year-old San Francisco resident , in a recent Twitter post visible to his group of friends on the service .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: wrote Chris Messina , a 26-year-old San Francisco resident , in a recent Twitter post visible to his group of friends on the service .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom n",
      "Alfred Blumstein , a criminologist at Carnegie Mellon University , called the Connecticut situation '' mind-boggling . '' ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Alfred Blumstein , a criminologist at Carnegie Mellon University , called the Connecticut situation '' mind-boggling . '' ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\"\n    sentence = sentence_parser.parse(prompt)\n    sentence_splitter.split(sentence)\n    sentence_",
      "Besides his daughter Jennifer , of Boulder , Mr. Peters is survived by three other children from his first marriage , Geoffrey , of Vienna , Va. ; Suzanne Peters Payne of Lafayette , Colo. ; and Gretchen Peters of Nashville ; a brother , Taylor , of Point Reyes , Calif. ; nine grandchildren ; and a great-grandchild .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Besides his daughter Jennifer , of Boulder , Mr. Peters is survived by three other children from his first marriage , Geoffrey , of Vienna , Va. ; Suzanne Peters Payne of Lafayette , Colo. ; and Gretchen Peters of Nashville ; a brother , Taylor , of Point Reyes , Calif. ; nine grandchildren ; and a great-grandchild .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence import Sentence\nfrom nlp.entity import Entity\nfrom nlp.relation import Relation\n\n\ndef main():\n    sentence = Sentence(\n        \"In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\"\n    )\n    tokenizer = Tokenizer()\n    tokens = tokenizer.tokenize(sentence)\n    entities = []\n    relations = []\n    for token in tokens:\n        if token.is_entity():\n            entities.append(token.entity())\n        elif token.is_relation():\n            relations.append(token.relation())\n\n    for entity in entities:\n        for relation in relations:\n            if relation.is_directed():\n                relation.add_entity(entity)\n\n    print(relations)\n\n\nif __name__ == \"__main__\":\n    main()\n</s>",
      "INTERNATIONAL A3-11 Poverty Stricken Iraqis Turn to Selling Sex in Syria For anyone living in Damascus , the fact that some Iraqi refugees are selling sex or working in sex clubs is difficult to ignore .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: INTERNATIONAL A3-11 Poverty Stricken Iraqis Turn to Selling Sex in Syria For anyone living in Damascus , the fact that some Iraqi refugees are selling sex or working in sex clubs is difficult to ignore .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.entity import EntityRecognizer\nfrom nlp.relation import RelationRecognizer\nfrom nlp.parser import Parser\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    tokenizer.add_stop_words(\"en\")\n    tokenizer.add_stop_words(\"ar\")\n    tokenizer.add_stop_words(\"fa\")\n    tokenizer.add_stop_words(\"ar-sa\")\n    tokenizer.add_stop_words(\"ar-qa\")\n    tokenizer.add_stop_words(\"ar-jo\")\n    tokenizer.add_stop_words(\"ar-ma\")\n    tokenizer.add_stop_words(\"ar-ye\")\n    tokenizer.add_stop_words(\"ar-om\")\n    tokenizer.add_stop_words(\"ar-sd\")\n    tokenizer.add_stop_words(\"ar-kz\")\n    tokenizer.add_stop_words(\"ar-ae\")\n    tokenizer.add_stop_words(\"ar-bh\")\n    tokenizer.add_stop_words(\"ar-qa\")\n    tokenizer.add_stop_words(\"ar-kw\")\n    tokenizer.add_stop_words(\"ar-ly\")\n    tokenizer.add_stop_words(\"ar-ma\")\n    tokenizer.add_stop_words(\"ar-sa\")\n    tokenizer.add_stop_words(\"ar-jo\")\n    tokenizer.add_stop_words(\"ar-ye\")\n    tokenizer.add_stop_words(\"ar-om\")\n    tokenizer.add_stop_words(\"ar-sd\")\n    tokenizer.add_stop_words(\"ar-kz\")\n    tokenizer.add_stop_words(\"ar-ae\")\n    tokenizer.add_stop_words(\"ar-bh\")\n    tokenizer.",
      "Now an author , Mr. Jordan used to be a paid dishwasher , following in the steps of literary plongeurs like Theodore Dreiser and George Orwell , who , recalling his time behind the sink in Paris , once wrote : '' This washing up was a thoroughly odious job -- not hard , but boring and silly beyond words .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Now an author , Mr. Jordan used to be a paid dishwasher , following in the steps of literary plongeurs like Theodore Dreiser and George Orwell , who , recalling his time behind the sink in Paris , once wrote : '' This washing up was a thoroughly odious job -- not hard , but boring and silly beyond words .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom n",
      "This week , during a Congressional spring break , the presidential candidates whose day jobs normally are on Capitol Hill have been given a reprieve from flying back to Washington to cast votes .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: This week , during a Congressional spring break , the presidential candidates whose day jobs normally are on Capitol Hill have been given a reprieve from flying back to Washington to cast votes .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenize import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.ner import NER\nfrom nlp.relation import RelationExtractor\nfrom nlp.util import *\n\n\ndef main():\n    # Load the training data\n    train_data = load_data(\"train.txt\")\n    test_data = load_data(\"test.txt\")\n\n    # Tokenize the data\n    tokenizer = Tokenizer()\n    train_data = tokenizer.tokenize(train_data)\n    test_data = tokenizer.tokenize(test_data)\n\n    # Sentiment analysis\n    sentiment_analyzer = SentimentAnalyzer()\n    sentiment_analyzer.load_model(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model_path(\"sentiment_analyzer.model\")\n    sentiment_analyzer.set_model",
      "It 's a new world now , '' Mr. McCartney , the former Beatle , said yesterday during a video chat with Howard Schultz , Starbucks 's chairman , conducted in front of thousands of people attending the shareholders ' meeting . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: It 's a new world now , '' Mr. McCartney , the former Beatle , said yesterday during a video chat with Howard Schultz , Starbucks 's chairman , conducted in front of thousands of people attending the shareholders ' meeting . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.entity import EntityRecognizer\nfrom nlp.relation import RelationRecognizer\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    analyzer = SentimentAnalyzer()\n    recognizer = EntityRecognizer()\n    recognizer.add_entity_type(\"person\", \"PERSON\")\n    recognizer.add_entity_type(\"organization\", \"ORGANIZATION\")\n    recognizer.add_entity_type(\"location\", \"LOCATION\")\n    recognizer.add_entity_type(\"event\", \"EVENT\")\n    recognizer.add_entity_type(\"time\", \"TIME\")\n    recognizer.add_entity_type(\"number\", \"NUMBER\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity_time\", \"QUANTITY_TIME\")\n    recognizer.add_entity_type(\"quantity_number\", \"QUANTITY_NUMBER\")\n    recognizer.add_entity_type(\"quantity_quantity\", \"QUANTITY_QUANTITY\")\n    recognizer.add_entity_type(\"quantity_quantity_time\", \"QUANTITY_QUANTITY_TIME\")\n    recognizer.add_entity_type(\"quantity_quantity_number\", \"QUANTITY_QUANTITY_NUMBER\")\n    recognizer.add_entity_type(\"quantity_quantity_quantity_time\", \"QUANTITY_QUANTITY_QUANTITY_TIME\")\n    recognizer.add_entity_type(\"quantity_quantity_quantity_number\", \"QUANTITY_QUANTITY_QUANTITY_NUMBER\")\n    recognizer.add_entity_type(\"quantity_quantity_quantity_quantity_time\", \"QUANTITY_QUANTITY_QUANTITY_QUANTITY_TIME\")\n    recognizer.add_entity_type(\"quantity_quantity",
      "Whenever Laura Lippman takes a work break from the lively adventures she 's been writing for the past 10 years about a quick-witted Baltimore sleuth named Tess Monaghan , it 's more a stretch than a vacation , an opportunity to examine more closely the criminal behaviors and psychological motivations that have to be wrapped up swiftly and neatly in action-oriented procedurals .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Whenever Laura Lippman takes a work break from the lively adventures she 's been writing for the past 10 years about a quick-witted Baltimore sleuth named Tess Monaghan , it 's more a stretch than a vacation , an opportunity to examine more closely the criminal behaviors and psychological motivations that have to be wrapped up swiftly and neatly in action-oriented procedurals .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\"\n    sentence = sentence_parser.parse(prompt)\n    sentence_splitter.split(sentence)\n    sentence_segmenter.segment(sentence)\n    sentence_parser.parse(sentence)\n    entity_extractor.extract(sentence)\n    entity_linker.link(entity_extractor.extracted_entities)\n    entity_linker_test.test(entity_linker.linked_entities)\n\n\nif __name__ == '__main__':\n    main()\n</s>",
      "Does Joe Torre show Bernie the respect normally given to elders -- allowing him to duck the long bus rides to Fort Myers or Kissimmee when the exhibitions begin in Florida ?": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Does Joe Torre show Bernie the respect normally given to elders -- allowing him to duck the long bus rides to Fort Myers or Kissimmee when the exhibitions begin in Florida ?\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence import Sentence\nfrom nlp.entity import Entity\nfrom nlp.relation import Relation\n\n\ndef main():\n    sentence = Sentence(\"Does Joe Torre show Bernie the respect normally given to elders -- allowing him to duck the long bus rides to Fort Myers or Kissimmee when the exhibitions begin in Florida ?\")\n    tokenizer = Tokenizer()\n    tokens = tokenizer.tokenize(sentence)\n    entities = []\n    relations = []\n    for token in tokens:\n        if token.is_entity():\n            entities.append(token.entity())\n        elif token.is_relation():\n            relations.append(token.relation())\n\n    for entity in entities:\n        for relation in relations:\n            if entity.entity_id() == relation.entity_id():\n                relation.add_entity(entity)\n\n    print(relations)\n\n\nif __name__ == '__main__':\n    main()\n</s>",
      "Over time , could this predominantly Sunni country change its religious orientation -- solidifying its ties to Iran and creating strong repercussions throughout the Middle East ?": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Over time , could this predominantly Sunni country change its religious orientation -- solidifying its ties to Iran and creating strong repercussions throughout the Middle East ?\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_trainer import EntityLinkerTrainer\nfrom nlp.entity_linker_evaluator import EntityLinkerEvaluator\nfrom nlp.entity_linker_evaluator_trainer import EntityLinkerEvaluatorTrainer\nfrom nlp.entity_linker_evaluator_trainer_test import EntityLinkerEvaluatorTrainerTest\nfrom nlp.entity_linker_evaluator_test import EntityLinkerEvaluatorTest\nfrom nlp.entity_linker_evaluator_trainer_test import EntityLinkerEvaluatorTrainerTest\nfrom nlp.entity_linker_evaluator_test import EntityLinkerEvaluatorTest\nfrom nlp.entity_linker_evaluator_trainer import EntityLinkerEvaluatorTrainer\nfrom nlp.entity_linker_evaluator import EntityLinkerEvaluator\n",
      "PAGE A16 Jack Valenti Is Dead Jack Valenti , a confidant of President Lyndon B. Johnson who then led the Motion Picture Association of America for 38 years , devising its ratings system , was 85 .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: PAGE A16 Jack Valenti Is Dead Jack Valenti , a confidant of President Lyndon B. Johnson who then led the Motion Picture Association of America for 38 years , devising its ratings system , was 85 .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.entity import EntityRecognizer\nfrom nlp.relation import RelationRecognizer\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(\"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\")\n    sentence = sentence.lower()\n    sentence = sentence.replace(\" \", \"\")\n    sentence = sentence.replace(\"'\", \"\")\n    sentence = sentence.replace(\"-\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"!\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence = sentence.replace(\"...\", \"\")\n    sentence",
      "On Wednesday , suicide bombings killed 33 people in Algiers , the capital of Algeria .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: On Wednesday , suicide bombings killed 33 people in Algiers , the capital of Algeria .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"On Wednesday , suicide bombings killed 33 people in Algiers , the capital of Alger",
      "It will also include two nights of Mr. Byrne 's work : a performance of music from '' The Knee Plays , '' his 1985 theatrical collaboration with Robert Wilson , and a preview of '' Here Lies Love , '' his new multimedia song cycle based on the life and reign of Imelda Marcos , the former first lady of the Philippines .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: It will also include two nights of Mr. Byrne 's work : a performance of music from '' The Knee Plays , '' his 1985 theatrical collaboration with Robert Wilson , and a preview of '' Here Lies Love , '' his new multimedia song cycle based on the life and reign of Imelda Marcos , the former first lady of the Philippines .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.entity import EntityRecognizer\nfrom nlp.relation import RelationRecognizer\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    analyzer = SentimentAnalyzer()\n    recognizer = EntityRecognizer()\n    recognizer.add_entity_type(\"person\", \"PERSON\")\n    recognizer.add_entity_type(\"organization\", \"ORGANIZATION\")\n    recognizer.add_entity_type(\"location\", \"LOCATION\")\n    recognizer.add_entity_type(\"event\", \"EVENT\")\n    recognizer.add_entity_type(\"time\", \"TIME\")\n    recognizer.add_entity_type(\"number\", \"NUMBER\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"date\", \"DATE\")\n    recognizer.add_entity_type(\"percentage\", \"PERCENTAGE\")\n    recognizer.add_entity_type(\"currency\", \"CURRENCY\")\n    recognizer.add_entity_type(\"quantity_of_time\", \"QUANTITY_OF_TIME\")\n    recognizer.add_entity_type(\"quantity_of_money\", \"QUANTITY_OF_MONEY\")\n    recognizer.add_entity_type(\"quantity_of_other\", \"QUANTITY_OF_OTHER\")\n    recognizer.add_entity_type(\"quantity_of_other_with_unit\", \"QUANTITY_OF_OTHER_WITH_UNIT\")\n    recognizer.add_entity_type(\"quantity_of_other_with_unit_and_value\", \"QUANTITY_OF_OTHER_WITH_UNIT_AND_VALUE\")\n    recognizer.add_entity_type(\"quantity_of_other_with_unit_and_value_and_value\", \"QUANTITY_OF_OTHER_WITH_UNIT_AND_VALUE_AND_VALUE\")\n    recognizer.add_entity_type(\"quantity_of_other_with_unit_and_value_and_value_and_value\", \"QUANTITY_OF_OTHER_WITH_UNIT_AND_VALUE_AND_VALUE_AND_VALUE\")\n    recognizer.add_entity_type(\"quantity_of_other_with_unit_and_value_and_value_and_value_and_value\", \"QUANTITY_OF_OTHER_WITH_UNIT_AND_VALUE_AND_VALUE_AND_VALUE_AND_VALUE\")\n    recognizer.add_entity_type(\"quantity_of_other_with_unit_and_value_and_value_and_value_and_value_and_value\", \"QUANTITY_OF_OTHER_",
      "The Greenburgh supervisor , Paul J. Feiner , said he was disappointed that a deal he considered good for everyone would have to be reworked . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: The Greenburgh supervisor , Paul J. Feiner , said he was disappointed that a deal he considered good for everyone would have to be reworked . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Greenburgh supervisor , Paul J. Feiner , said he was disappointed that a deal he considered good for everyone would have to be reworked . ''\"\n    tokens = tokenizer.tokenize(prompt)\n    sentences = sentence_splitter.split(tokens)\n    sentences = [sentence_segmenter.segment(sentence) for sentence in sentences]\n    sentences = [",
      "Government employees who resell the passes are committing fraud , according to a report by the Government Accountability Office , scheduled to be released Tuesday by Senator Norm Coleman , Republican of Minnesota .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Government employees who resell the passes are committing fraud , according to a report by the Government Accountability Office , scheduled to be released Tuesday by Senator Norm Coleman , Republican of Minnesota .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenize import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentences = tokenizer.tokenize(text)\n    sentences = [sentence for sentence in sentences if sentence]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [sentence for sentence in sentences if sentence.strip()]\n    sentences = [",
      "I had the privilege to work on mental health policy for Paul Wellstone , the senator from Minnesota who pushed for parity legislation before his death in 20002 .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: I had the privilege to work on mental health policy for Paul Wellstone , the senator from Minnesota who pushed for parity legislation before his death in 20002 .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util",
      "The son of Eugenio Bava , a cinematographer whose credits go back to Giovanni Pastrone 's 1914 '' Cabiria , '' one of the first great epics of Italian cinema , Mario Bava was himself a successful cinematographer , with a reputation for saving troubled international co-productions , when he was invited to direct a project of his own .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: The son of Eugenio Bava , a cinematographer whose credits go back to Giovanni Pastrone 's 1914 '' Cabiria , '' one of the first great epics of Italian cinema , Mario Bava was himself a successful cinematographer , with a reputation for saving troubled international co-productions , when he was invited to direct a project of his own .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.sentence_extractor import SentenceExtractor\nfrom nlp.",
      "David Hyde Pierce -LRB- '' Frasier '' -RRB- and Debra Monk -LRB- '' Chicago '' -RRB- star in this satire of the theater and detective stories .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: David Hyde Pierce -LRB- '' Frasier '' -RRB- and Debra Monk -LRB- '' Chicago '' -RRB- star in this satire of the theater and detective stories .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\"\n    sentence_splitter.split_sentence(prompt)\n    sentence_segmenter.segment_sentence(prompt)\n    sentence_parser.parse_sentence(prompt)\n    entity_extractor.extract_entities(prompt)\n    entity_linker.link_entities(prompt)\n    entity_linker_test.test_entity_linker(prompt)\n\n\nif __name__ == '__main__':\n    main()\n</s>",
      "The extended Ram\u00edrez family -- a surviving daughter , nieces , nephews and grandchildren , great-grandchildren and great-great-grandchildren -- stretches from Guadalajara , Mexico , to California .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: The extended Ram\u00edrez family -- a surviving daughter , nieces , nephews and grandchildren , great-grandchildren and great-great-grandchildren -- stretches from Guadalajara , Mexico , to California .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence import Sentence\nfrom nlp.entity import Entity\nfrom nlp.relation import Relation\n\n\ndef main():\n    sentence = Sentence(\"The extended Ram\u00edrez family -- a surviving daughter , nieces , nephews and grandchildren , great-grandchildren and great-great-grandchildren -- stretches from Guadalajara , Mexico , to California .\")\n    tokenizer = Tokenizer()\n    tokens = tokenizer.tokenize(sentence)\n    entities = []\n    relations = []\n    for token in tokens:\n        if token.is_entity():\n            entities.append(token.entity())\n        elif token.is_relation():\n            relations.append(token.relation())\n\n    for entity in entities:\n        for relation in relations:\n            if entity.entity_id() == relation.entity_id():\n                relation.add_entity(entity)\n\n    for relation in relations:\n        for entity in relation.entities():\n            print(relation.entity_id(), entity.entity_id(), relation.relation_type(), entity.entity_type())\n\n\nif __name__ == '__main__':\n    main()\n</s>",
      "Jordan ruled the West Bank from the armistice that concluded the 1948-49 war until 1967 , when Israel conquered the area , which it still occupies .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Jordan ruled the West Bank from the armistice that concluded the 1948-49 war until 1967 , when Israel conquered the area , which it still occupies .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence import Sentence\nfrom nlp.entity import Entity\nfrom nlp.relation import Relation\n\n\ndef extract_relations(sentence):\n    \"\"\"\n    Given a sentence, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(sentence)\n    sentence = Sentence(sentence)\n    entities = sentence.entities()\n    relations = []\n    for entity in entities:\n        relations.append([entity.name, entity.relationship, entity.entity])\n    return relations\n\n\ndef extract_relations_from_file(file_name):\n    \"\"\"\n    Given a file name, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    with open(file_name, 'r') as f:\n        sentence = tokenizer.tokenize(f.read())\n        sentence = Sentence(sentence)\n        entities = sentence.entities()\n        relations = []\n        for entity in entities:\n            relations.append([entity.name, entity.relationship, entity.entity])\n        return relations\n\n\ndef extract_relations_from_text(text):\n    \"\"\"\n    Given a text, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(text)\n    sentence = Sentence",
      "It 's even better when you can just roll out of bed each morning and tackle a different menu , spending one day on Neapolitan-style pizza and perhaps returning on another for pasta , as you can at the Sorrento Cooking School at the Esperidi Resort on the Amalfi Coast in Italy .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: It 's even better when you can just roll out of bed each morning and tackle a different menu , spending one day on Neapolitan-style pizza and perhaps returning on another for pasta , as you can at the Sorrento Cooking School at the Esperidi Resort on the Amalfi Coast in Italy .\nrelations: [/INST]\n\n\"\"\"\n\nimport re\nimport nltk\nfrom nltk.corpus import treebank\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk",
      "All these elements can be found in films that range from Taiwan -LRB- the magnificent work of Hou Hsiao-hsien -RRB- to Portugal -LRB- in the stately urban studies of Pedro Costa -RRB- and many points in between .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: All these elements can be found in films that range from Taiwan -LRB- the magnificent work of Hou Hsiao-hsien -RRB- to Portugal -LRB- in the stately urban studies of Pedro Costa -RRB- and many points in between .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util",
      "Investors include the Bill & Melinda Gates Foundation , which granted the Institute for OneWorld Health $ 42.6 million to finance Amyris 's antimalarial drug , and two princes of Silicon Valley venture capital , John Doerr of Kleiner Perkins Caufield & Byers , and Vinod Khosla of Khosla Ventures , who , with the private equity group of Texas Pacific Group Ventures , invested $ 20 million .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Investors include the Bill & Melinda Gates Foundation , which granted the Institute for OneWorld Health $ 42.6 million to finance Amyris 's antimalarial drug , and two princes of Silicon Valley venture capital , John Doerr of Kleiner Perkins Caufield & Byers , and Vinod Khosla of Khosla Ventures , who , with the private equity group of Texas Pacific Group Ventures , invested $ 20 million .\nrelations: [/INST]\n\n\"\"\"\n\nimport re\nimport nltk\nfrom nltk.corpus import treebank\nfrom nltk.corpus import treebank_tags\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\nfrom nltk.corpus import treebank_util\n",
      "The sales activity is '' pacing very close to where we were at this time three years ago '' when CBS last broadcast a Super Bowl , said JoAnn Ross , president for network sales at CBS in New York , part of the CBS Corporation . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: The sales activity is '' pacing very close to where we were at this time three years ago '' when CBS last broadcast a Super Bowl , said JoAnn Ross , president for network sales at CBS in New York , part of the CBS Corporation . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.entity import EntityRecognizer\nfrom nlp.relation import RelationRecognizer\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    analyzer = SentimentAnalyzer()\n    recognizer = EntityRecognizer()\n    recognizer.add_entity_type(\"person\", \"PERSON\")\n    recognizer.add_entity_type(\"organization\", \"ORGANIZATION\")\n    recognizer.add_entity_type(\"location\", \"LOCATION\")\n    recognizer.add_entity_type(\"event\", \"EVENT\")\n    recognizer.add_entity_type(\"time\", \"TIME\")\n    recognizer.add_entity_type(\"number\", \"NUMBER\")\n    recognizer.add_entity_type(\"quantity\", \"QUANTITY\")\n    recognizer.add_entity_type(\"quantity_time\", \"QUANTITY_TIME\")\n    recognizer.add_entity_type(\"quantity_number\", \"QUANTITY_NUMBER\")\n    recognizer.add_entity_type(\"quantity_quantity\", \"QUANTITY_QUANTITY\")\n    recognizer.add_entity_type(\"quantity_quantity_time\", \"QUANTITY_QUANTITY_TIME\")\n    recognizer.add_entity_type(\"quantity_quantity_number\", \"QUANTITY_QUANTITY_NUMBER\")\n    recognizer.add_entity_type(\"quantity_quantity_quantity_time\", \"QUANTITY_QUANTITY_QUANTITY_TIME\")\n    recognizer.add_entity_type(\"quantity_quantity_quantity_number\", \"QUANTITY_QUANTITY_QUANTITY_NUMBER\")\n    recognizer.add_entity_type(\"quantity_quantity",
      "In 1942 , he became headmaster at the Graham Eckes School in Palm Beach , Florida .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: In 1942 , he became headmaster at the Graham Eckes School in Palm Beach , Florida .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    sentence = \"In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\"\n    sentence_split",
      "The buses were bound for Augusta , Ga. , where the men , all students at Morehouse College , would gather around the grave of the Baptist minister who founded the institution 140 years ago , hold hands and sing the college hymn -- a tribute that recurs every five years to celebrate the founding of the college . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: The buses were bound for Augusta , Ga. , where the men , all students at Morehouse College , would gather around the grave of the Baptist minister who founded the institution 140 years ago , hold hands and sing the college hymn -- a tribute that recurs every five years to celebrate the founding of the college . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenize import Tokenizer\nfrom nlp.sentiment import SentimentAnalyzer\nfrom nlp.ner import NER\nfrom nlp.relation import RelationExtractor\nfrom nlp.util import *\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(\"The buses were bound for Augusta , Ga. , where the men , all students at Morehouse College , would gather around the grave of the Baptist minister who founded the institution 140 years ago , hold hands and sing the college hymn -- a tribute that recurs every five years to celebrate the founding of the college . ''\")\n    sentence = sentence.lower()\n    sentence = sentence.replace(\"'\", \"\")\n    sentence = sentence.replace(\"-\", \"\")\n    sentence = sentence.replace(\"_\", \"\")\n    sentence = sentence.replace(\" \", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"!\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.replace(\"?\", \"\")\n    sentence = sentence.",
      "DODGE -- Cleveland E. -LRB- Clee -RRB- Jr. , on Sunday , January 28 , in Bennington , Vermont , after a long struggle with prostate cancer .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: DODGE -- Cleveland E. -LRB- Clee -RRB- Jr. , on Sunday , January 28 , in Bennington , Vermont , after a long struggle with prostate cancer .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker(entity_extractor)\n    entity_linker_test = EntityLinkerTest(entity_linker)\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\"\n    sentence_splitter.split_sentence(prompt)\n    sentence_parser.parse_sentence(prompt)\n    entity_extractor.extract_entities(sentence_parser.get_sentence())\n    entity_linker.link_entities(entity_extractor.get_entities())\n    entity_linker_test.test_entity_linker(entity_linker.get_entities())\n\n\nif __name__ == '__main__':\n    main()\n</s>",
      "American companies would be largely exempt from this rule because of a treaty with Thailand that dates to the Vietnam War , said Kitipong Urapeepatanapong , a partner at Baker & McKenzie in Bangkok . ''": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: American companies would be largely exempt from this rule because of a treaty with Thailand that dates to the Vietnam War , said Kitipong Urapeepatanapong , a partner at Baker & McKenzie in Bangkok . ''\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util",
      "Mainland China still has many restrictions on the private ownership of gold , slowing but not preventing the creation of a modern gold market in Shanghai with ambitions to become an important force in global trading .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Mainland China still has many restrictions on the private ownership of gold , slowing but not preventing the creation of a modern gold market in Shanghai with ambitions to become an important force in global trading .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test",
      "Viswanathan Anand of India , poised to become the world 's top-ranked player and generally acknowledged as the best rapid player , has won or tied for first six times .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Viswanathan Anand of India , poised to become the world 's top-ranked player and generally acknowledged as the best rapid player , has won or tied for first six times .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom nlp.entity_linker_test import EntityLinkerTest\nfrom n",
      "A memorial service will be scheduled in Boca Raton , Florida .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: A memorial service will be scheduled in Boca Raton , Florida .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n",
      "Many families wanted a cemetery close to Washington Heights , the center of New York City 's Dominican community , specifically Trinity , at 153rd Street and Riverside Drive .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Many families wanted a cemetery close to Washington Heights , the center of New York City 's Dominican community , specifically Trinity , at 153rd Street and Riverside Drive .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util",
      "Known as the Queen of the Arabian Sea , Kochi has a multilayered colonial history , relaxing ayurvedic spas , colorful Kathakali dance troupes , stately rajah palaces and a laid-back way of life that is a welcome change from India 's typical frenzy .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Known as the Queen of the Arabian Sea , Kochi has a multilayered colonial history , relaxing ayurvedic spas , colorful Kathakali dance troupes , stately rajah palaces and a laid-back way of life that is a welcome change from India 's typical frenzy .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom nlp.entity_linker_util import EntityLinkerUtil\nfrom n",
      "Mr. Hosseini said that Iran was surprised that European leaders had ignored comments by Israel 's prime minister , Ehud Olmert , recently that seemed to confirm that Israel possessed nuclear weapons .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Mr. Hosseini said that Iran was surprised that European leaders had ignored comments by Israel 's prime minister , Ehud Olmert , recently that seemed to confirm that Israel possessed nuclear weapons .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence import Sentence\nfrom nlp.entity import Entity\nfrom nlp.relation import Relation\n\n\ndef extract_relations(sentence):\n    \"\"\"\n    Given a sentence, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(sentence)\n    sentence = Sentence(sentence)\n    entities = sentence.entities()\n    relations = []\n    for entity in entities:\n        relations.append([entity.name, entity.relationship, entity.entity])\n    return relations\n\n\ndef extract_relations_from_file(file_name):\n    \"\"\"\n    Given a file name, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    with open(file_name, 'r') as f:\n        for line in f:\n            sentence = tokenizer.tokenize(line)\n            sentence = Sentence(sentence)\n            entities = sentence.entities()\n            relations = []\n            for entity in entities:\n                relations.append([entity.name, entity.relationship, entity.entity])\n            return relations\n\n\ndef extract_relations_from_text(text):\n    \"\"\"\n    Given a text, extract the relationships between entities within the text.\n    \"\"\"\n    tokenizer = Tokenizer()\n    sentence = tokenizer.tokenize(text)\n",
      "Bangkok Garden is the life 's work of an extended family from central Thailand , about 100 miles northwest of Bangkok .": "<s>[INST] Given a prompt, identify and list the relationships between entities within the text. \nExtract relationships both within a single sentence (intra-sentence) and across multiple sentences (inter-sentence). \nProvide a list of triplets in the format [`ENTITY 1`, `RELATIONSHIP`, `ENTITY 2`]. The relationship is directed, so the order of entities in each triplet matters.\n\nExample 1:\nprompt: In 2020, the Nobel Peace Prize was awarded to the World Food Programme for its efforts to combat hunger. The organization has been operational since 1961.\nrelations:\n[[\"Nobel Peace Prize\", \"awarded in\", \"2020\"], [\"Nobel Peace Prize\", \"awarded to\", \"World Food Programme\"], [\"World Food Programme\", \"efforts to\", \"combat hunger\"], [\"World Food Programme\", \"operational since\", \"1961\"]]\n\nExample 2:\nprompt: The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\nrelations:\n[[\"Great Barrier Reef\", \"located at\", \"coast of Australia\"], [\"Great Barrier Reef\", \"is\", \"world's largest coral reef system\"], [\"Great Barrier Reef\", \"affected by\", \"climate change\"], [\"Climate change\", \"leads to\", \"coral bleaching\"]]\n\nprompt: Bangkok Garden is the life 's work of an extended family from central Thailand , about 100 miles northwest of Bangkok .\nrelations: [/INST]\n\n\"\"\"\n\nfrom nlp.tokenizer import Tokenizer\nfrom nlp.sentence_splitter import SentenceSplitter\nfrom nlp.sentence_segmenter import SentenceSegmenter\nfrom nlp.sentence_parser import SentenceParser\nfrom nlp.entity_extractor import EntityExtractor\nfrom nlp.entity_linker import EntityLinker\nfrom nlp.entity_linker_test import EntityLinkerTest\n\n\ndef main():\n    tokenizer = Tokenizer()\n    sentence_splitter = SentenceSplitter()\n    sentence_segmenter = SentenceSegmenter()\n    sentence_parser = SentenceParser()\n    entity_extractor = EntityExtractor()\n    entity_linker = EntityLinker()\n    entity_linker_test = EntityLinkerTest()\n\n    prompt = \"The Great Barrier Reef, located off the coast of Australia, is the world's largest coral reef system. It has been severely affected by climate change, leading to coral bleaching.\"\n    sentence = sentence_parser.parse(prompt)\n    sentence_splitter.split(sentence)\n    sentence_"
}